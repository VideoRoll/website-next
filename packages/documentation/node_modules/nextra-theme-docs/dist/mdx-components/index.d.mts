import * as next_image from 'next/image';
import * as nextra from 'nextra';
import * as nextra_mdx_components_pre_index from 'nextra/mdx-components/pre/index';
import * as react_jsx_runtime from 'react/jsx-runtime';
import * as react from 'react';
import { FC } from 'react';
import { MDXComponents } from 'nextra/mdx-components';

declare const useMDXComponents: (components?: Readonly<MDXComponents>) => {
    symbol?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGSymbolElement>, "ref">> | undefined;
    object?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>, "ref">> | undefined;
    map?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>, "ref">> | undefined;
    filter?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFilterElement>, "ref">> | undefined;
    footer?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    search?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    big?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    link?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>, "ref">> | undefined;
    small?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    sub?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    sup?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    article?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    code: keyof react.JSX.IntrinsicElements | FC<react.ClassAttributes<HTMLElement> & react.HTMLAttributes<HTMLElement> & {
        'data-language'?: string;
    }>;
    path?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGPathElement>, "ref">> | undefined;
    set?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGSetElement>, "ref">> | undefined;
    title?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>, "ref">> | undefined;
    time?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.TimeHTMLAttributes<HTMLTimeElement>, HTMLTimeElement>, "ref">> | undefined;
    div?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref">> | undefined;
    a: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>, "ref">>;
    abbr?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    address?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    area?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>, "ref">> | undefined;
    aside?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    audio?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>, "ref">> | undefined;
    b?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    base?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>, "ref">> | undefined;
    bdi?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    bdo?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    blockquote: keyof react.JSX.IntrinsicElements | react.FunctionComponent<react.DetailedHTMLProps<react.BlockquoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>>;
    body?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>, "ref">> | undefined;
    br?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLBRElement>, HTMLBRElement>, "ref">> | undefined;
    button?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref">> | undefined;
    canvas?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>, "ref">> | undefined;
    caption?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    center?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    cite?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    col?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>, "ref">> | undefined;
    colgroup?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>, "ref">> | undefined;
    data?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>, "ref">> | undefined;
    datalist?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>, "ref">> | undefined;
    dd?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    del?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.DelHTMLAttributes<HTMLModElement>, HTMLModElement>, "ref">> | undefined;
    details: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.DetailsHTMLAttributes<HTMLDetailsElement>, HTMLDetailsElement>>;
    dfn?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    dialog?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>, "ref">> | undefined;
    dl?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLDListElement>, HTMLDListElement>, "ref">> | undefined;
    dt?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    em?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    embed?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>, "ref">> | undefined;
    fieldset?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>, "ref">> | undefined;
    figcaption?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    figure?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    form?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>, "ref">> | undefined;
    h1: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
    h2: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
    h3: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
    h4: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
    h5: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
    h6: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>>;
    head?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>, "ref">> | undefined;
    header?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    hgroup?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    hr: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHRElement>, HTMLHRElement>, "ref">> | ((props: Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLHRElement>, HTMLHRElement>, "ref">) => react_jsx_runtime.JSX.Element);
    html?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>, "ref">> | undefined;
    i?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    iframe?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>, "ref">> | undefined;
    input?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>, "ref">> | undefined;
    ins?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.InsHTMLAttributes<HTMLModElement>, HTMLModElement>, "ref">> | undefined;
    kbd?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    keygen?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.KeygenHTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    label?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "ref">> | undefined;
    legend?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>, "ref">> | undefined;
    li: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, "ref">> | ((props: Omit<react.DetailedHTMLProps<react.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, "ref">) => react_jsx_runtime.JSX.Element);
    main?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    mark?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    menu?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.MenuHTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    menuitem?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    meta?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>, "ref">> | undefined;
    meter?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.MeterHTMLAttributes<HTMLMeterElement>, HTMLMeterElement>, "ref">> | undefined;
    nav?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    noindex?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    noscript?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    ol: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>, "ref">> | ((props: Omit<react.DetailedHTMLProps<react.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>, "ref">) => react_jsx_runtime.JSX.Element);
    optgroup?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>, "ref">> | undefined;
    option?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>, "ref">> | undefined;
    output?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.OutputHTMLAttributes<HTMLOutputElement>, HTMLOutputElement>, "ref">> | undefined;
    p: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref">> | ((props: Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref">) => react_jsx_runtime.JSX.Element);
    param?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>, "ref">> | undefined;
    picture?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    pre: keyof react.JSX.IntrinsicElements | FC<nextra_mdx_components_pre_index.PreProps>;
    progress?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>, "ref">> | undefined;
    q?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>, "ref">> | undefined;
    rp?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    rt?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    ruby?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    s?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    samp?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    slot?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>, "ref">> | undefined;
    script?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>, "ref">> | undefined;
    section?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    select?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>, "ref">> | undefined;
    source?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>, "ref">> | undefined;
    span?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "ref">> | undefined;
    strong?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    style?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>, "ref">> | undefined;
    summary: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>>;
    table: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>, "ref">> | (({ className, ...props }: Omit<react.DetailedHTMLProps<react.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>, "ref">) => react_jsx_runtime.JSX.Element);
    template?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>, "ref">> | undefined;
    tbody?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, "ref">> | undefined;
    td: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>>;
    textarea?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>, "ref">> | undefined;
    tfoot?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, "ref">> | undefined;
    th: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>>;
    thead?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>, "ref">> | undefined;
    tr: keyof react.JSX.IntrinsicElements | FC<react.DetailedHTMLProps<react.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>>;
    track?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>, "ref">> | undefined;
    u?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    ul: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLUListElement>, HTMLUListElement>, "ref">> | ((props: Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLUListElement>, HTMLUListElement>, "ref">) => react_jsx_runtime.JSX.Element);
    var?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    video?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>, "ref">> | undefined;
    wbr?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.HTMLAttributes<HTMLElement>, HTMLElement>, "ref">> | undefined;
    webview?: keyof react.JSX.IntrinsicElements | FC<Omit<react.DetailedHTMLProps<react.WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>, "ref">> | undefined;
    svg?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGSVGElement>, "ref">> | undefined;
    animate?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGElement>, "ref">> | undefined;
    animateMotion?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGElement>, "ref">> | undefined;
    animateTransform?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGElement>, "ref">> | undefined;
    circle?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGCircleElement>, "ref">> | undefined;
    clipPath?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGClipPathElement>, "ref">> | undefined;
    defs?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGDefsElement>, "ref">> | undefined;
    desc?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGDescElement>, "ref">> | undefined;
    ellipse?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGEllipseElement>, "ref">> | undefined;
    feBlend?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEBlendElement>, "ref">> | undefined;
    feColorMatrix?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEColorMatrixElement>, "ref">> | undefined;
    feComponentTransfer?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEComponentTransferElement>, "ref">> | undefined;
    feComposite?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFECompositeElement>, "ref">> | undefined;
    feConvolveMatrix?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEConvolveMatrixElement>, "ref">> | undefined;
    feDiffuseLighting?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEDiffuseLightingElement>, "ref">> | undefined;
    feDisplacementMap?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEDisplacementMapElement>, "ref">> | undefined;
    feDistantLight?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEDistantLightElement>, "ref">> | undefined;
    feDropShadow?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEDropShadowElement>, "ref">> | undefined;
    feFlood?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEFloodElement>, "ref">> | undefined;
    feFuncA?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEFuncAElement>, "ref">> | undefined;
    feFuncB?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEFuncBElement>, "ref">> | undefined;
    feFuncG?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEFuncGElement>, "ref">> | undefined;
    feFuncR?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEFuncRElement>, "ref">> | undefined;
    feGaussianBlur?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEGaussianBlurElement>, "ref">> | undefined;
    feImage?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEImageElement>, "ref">> | undefined;
    feMerge?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEMergeElement>, "ref">> | undefined;
    feMergeNode?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEMergeNodeElement>, "ref">> | undefined;
    feMorphology?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEMorphologyElement>, "ref">> | undefined;
    feOffset?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEOffsetElement>, "ref">> | undefined;
    fePointLight?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFEPointLightElement>, "ref">> | undefined;
    feSpecularLighting?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFESpecularLightingElement>, "ref">> | undefined;
    feSpotLight?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFESpotLightElement>, "ref">> | undefined;
    feTile?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFETileElement>, "ref">> | undefined;
    feTurbulence?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGFETurbulenceElement>, "ref">> | undefined;
    foreignObject?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGForeignObjectElement>, "ref">> | undefined;
    g?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGGElement>, "ref">> | undefined;
    image?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGImageElement>, "ref">> | undefined;
    line?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGLineElementAttributes<SVGLineElement>, "ref">> | undefined;
    linearGradient?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGLinearGradientElement>, "ref">> | undefined;
    marker?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGMarkerElement>, "ref">> | undefined;
    mask?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGMaskElement>, "ref">> | undefined;
    metadata?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGMetadataElement>, "ref">> | undefined;
    mpath?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGElement>, "ref">> | undefined;
    pattern?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGPatternElement>, "ref">> | undefined;
    polygon?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGPolygonElement>, "ref">> | undefined;
    polyline?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGPolylineElement>, "ref">> | undefined;
    radialGradient?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGRadialGradientElement>, "ref">> | undefined;
    rect?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGRectElement>, "ref">> | undefined;
    stop?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGStopElement>, "ref">> | undefined;
    switch?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGSwitchElement>, "ref">> | undefined;
    text?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGTextElementAttributes<SVGTextElement>, "ref">> | undefined;
    textPath?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGTextPathElement>, "ref">> | undefined;
    tspan?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGTSpanElement>, "ref">> | undefined;
    use?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGUseElement>, "ref">> | undefined;
    view?: keyof react.JSX.IntrinsicElements | FC<Omit<react.SVGProps<SVGViewElement>, "ref">> | undefined;
    wrapper: nextra.MDXWrapper | (({ toc, children, metadata, bottomContent, ...props }: {
        toc: nextra.Heading[];
        children: react.ReactNode;
        metadata: nextra.$NextraMetadata;
        bottomContent?: react.ReactNode;
    }) => react_jsx_runtime.JSX.Element);
    img: FC<next_image.ImageProps>;
};

export { useMDXComponents };
